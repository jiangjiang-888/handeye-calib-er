<launch>

     <include file="$(find usb_cam)/launch/usb_cam-test.launch">
        <arg name="image_width" value="1280" />
        <arg name="image_height" value="720" />
        <arg name="video_device" value="/dev/video2" />
     </include>

    <arg name="markerId"        default="0"/>
    <arg name="markerSize"      default="0.151"/>    
    <arg name="eye"             default="left"/>
    <arg name="marker_frame"    default="aruco_marker_frame"/>
    <arg name="ref_frame"       default=""/>  
    <arg name="corner_refinement" default="LINES" /> 
    

    <node pkg="aruco_ros" type="single" name="aruco_single">
        <remap from="/camera_info" to="/camera/color/camera_info" />
        <remap from="/image" to="/camera/color/image_raw" />
        <param name="image_is_rectified" value="True"/>
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="marker_id"          value="$(arg markerId)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/> 
        <param name="camera_frame"       value="stereo_gazebo_$(arg eye)_camera_optical_frame"/>
        <param name="marker_frame"       value="$(arg marker_frame)" />
        <param name="corner_refinement"  value="$(arg corner_refinement)" />
    </node> 

    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
        <remap from="image" to="/aruco_single/result"/>
        <param name="autosize" value="true" />
    </node>

    <node name="aruco_tcp_publisher" pkg="handeye_calib" type="aruco_tcp_publisher.py" respawn="false" output="screen">
        <param name="corner_refinement"  value="$(arg corner_refinement)" />
    </node>

</launch>
